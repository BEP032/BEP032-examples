name: "Generate Doc and Publish"
on:
  push

jobs:
  docs:
    runs-on: ubuntu-latest
    defaults:
      # by default run in bash mode (required for conda usage)
      run:
        shell: bash -l {0}

    steps:
#    - name: Debugging
#      run: |
#        touch /tmp/sphinx-log
#        ls -lh /tmp

    # setup conda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
        clean-patched-environment-file: false

    - name: Install dependencies for fetching repo
      run: |
        conda install -c conda-forge git-annex datalad

    - name: Configure git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    # TODO: This should be cached
    - name: Fetch repository from GIN (including git-annex content)
      run: |
        # TODO: remove dev branch specification later on
        datalad install --get-data --branch add/doc -s https://gin.g-node.org/sprenger/BEP032-examples complete_repo
        # TODO: should be https://gin.g-node.org/NeuralEnsemble/BEP032-examples later on
        cd complete_repo

    - name: Get current year-month
      id: date
      run: echo "date=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      # the cache for python package is reset:
      #   * every month
      #   * when requirements/requirements_testing change
      id: cache-conda-env
      with:
        path: /usr/share/miniconda/envs/doc_env
        key: ${{ runner.os }}-conda-env-${{ hashFiles('**/environment.yml') }}-${{steps.date.outputs.date}}

    - name: Install dependencies for tutorials and documentation
      run: |
        conda create -n doc_env
        conda env update -n doc_env --file complete_repo/tutorials/environment.yml --file complete_repo/docs/environment.yml
        conda activate doc_env

#    - name: Print conda packages
#      run: |
#        conda list

    - name: Build documentation
      run: |
        ls -lh .
        cd docs
        make html

    - name: Checkout github pages repo
      uses: actions/checkout@v3
      with:
        ref: gh-pages  # branch to check out

    - name: move documentation to github pages repo
      run: |
        rm -r {GITHUB_WORKSPACE}/docs/_build/html
        rm -r {GITHUB_WORKSPACE/docs/tutorials
        cp -r _builds/html {GITHUB_WORKSPACE}/docs/_build/html
        cp -r tutorials {GITHUB_WORKSPACE}/docs



    #    - uses: ammaraskar/sphinx-action@master
    #      with:
    #        docs-folder: "docs/"
    # Example of using a custom build-command.
    #    - uses: ammaraskar/sphinx-action@master
    #      with:
    #        build-command: "sphinx-build -b html . _build"
    #        docs-folder: "docs/"
    # Great extra actions to compose with:
    # Create an artifact of the html output.
#    - uses: actions/upload-artifact@v1
#      with:
#        name: DocumentationHTML
#        path: docs/_build/html/

    - name: Commit documentation and push
      run: |
        cd {GITHUB_WORKSPACE}
        git add docs/*
        git commit -m "Update documentation" -a || true
        git push origin main

#    - uses: actions/checkout@v3
#      -

#    - name: Configure git remote to host documentation
#      run: |
#        git remote add ghBEP git@github.com:BEP032/BEP032-examples.git
#        git fetch ghBEP

    # Publish built docs to gh-pages branch.
    # ===============================
#    - name: Commit documentation changes
#      run: |
#        git checkout -b gh-pages origin/gh-pages
#        git merge add/doc  # TODO: This needs to be master later on
#        cp -r docs/_build/html/* gh-pages/
#        cd gh-pages
#        touch .nojekyll
#        git add .
#        git add docs/tutorials
#        git commit -m "Update documentation" -a || true
#        # The above command will fail if no changes were present, so we ignore
#        # that.
#
#    - name: Push changes
#      run: |
#        git push ghBEP gh-pages
#        branch: gh-pages
    # ===============================
