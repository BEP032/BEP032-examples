name: "Generate Doc and Publish"
on:
  push

jobs:
  docs:
    runs-on: ubuntu-latest
    defaults:
      # by default run in bash mode (required for conda usage)
      run:
        shell: bash -l {0}

    steps:
    #    - uses: actions/checkout@v3
    #    # Standard drop-in approach that should work for most people.

    - name: Debugging
      run: |
        touch /tmp/sphinx-log
        ls -lh /tmp

    - name: Get current year-month
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    # setup conda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: doc_env
        python-version: 3.9
        clean-patched-environment-file: false

    - uses: actions/cache@v3
      # the cache for python package is reset:
      #   * every month
      #   * when requirements/requirements_testing change
      id: cache-conda-env
      with:
        path: /usr/share/miniconda/envs/doc_env
        key: ${{ runner.os }}-conda-env-${{ hashFiles('**/environment.yml') }}-${{ steps.date.outputs.date }}


    - name: Install dependencies for fetching repo
      run: |
        conda install --name doc_env -c conda-forge git-annex datalad

    - name: Configure git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    # TODO: This should be cached
    - name: Fetch repository from GIN (including git-annex content)
      run: |
        # TODO: remove dev branch specification later on
        datalad install --get-data --branch add/doc -s https://gin.g-node.org/sprenger/BEP032-examples .
        # TODO: should be https://gin.g-node.org/NeuralEnsemble/BEP032-examples later on

    - name: Install dependencies for tutorials and documentation
      run: |
        conda env update --name doc_env --file tutorials/environment.yml --file docs/environment.yml

    - name: Print conda packages
      run: |
        conda list

    - name: Build documentation
      run: |
        cd docs
        make html

    #    - uses: ammaraskar/sphinx-action@master
    #      with:
    #        docs-folder: "docs/"
    # Example of using a custom build-command.
    #    - uses: ammaraskar/sphinx-action@master
    #      with:
    #        build-command: "sphinx-build -b html . _build"
    #        docs-folder: "docs/"
    # Great extra actions to compose with:
    # Create an artifact of the html output.
    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: docs/_build/html/

    - uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      with:
        SSHKEY: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure git remote to host documentation
      run: |
        git remote add ghBEP git@github.com:BEP032/BEP032-examples.git
        git fetch ghBEP

    # Publish built docs to gh-pages branch.
    # ===============================
    - name: Commit documentation changes
      run: |
        git checkout -b gh-pages ghBEP/gh-pages
        git merge add/doc  # TODO: This needs to be master later on
        cp -r docs/_build/html/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git add .
        git add docs/tutorials
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.

    - name: Push changes
      run: |
        git push ghBEP gh-pages
        branch: gh-pages
    # ===============================
